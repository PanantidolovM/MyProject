@page "/employees"
@using System.Net.Http.Json
@using EmployeeManagement.Blazor.Models
@using EmployeeManagement.Blazor.Layout
@inject NavigationManager NavigationManager
@inject HttpClient Http
@code {

    [CascadingParameter]
    public Action<string> SetTitle { get; set; } = default!;
    protected override void OnInitialized()
        {
            // C·∫≠p nh·∫≠t ti√™u ƒë·ªÅ cho trang Employees
            SetTitle?.Invoke("Employees");
        }
}

@* <EmployeeManagement.Blazor.Layout.PageTitle>@currentPageTitle</EmployeeManagement.Blazor.Layout.PageTitle> *@
<div>
    <h3>Employee Management</h3>
    <p>Manage all employees in your organization. Add new employees, update information, or remove employees who have left the company.</p>
</div>

<hr>

<div class="mb-3">
    <a class="btn btn-primary" href="/add">Add New Employee</a>
    <a class="btn btn-secondary" href="/reports">View Reports</a>
</div>
@if (employeeDtos == null || employeeDtos.Count == 0)
{
    <p><em>No employees found </em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>H·ªç</th>
                <th>T√™n</th>
                <th>Qu·ªëc t·ªãch</th>
                <th>H·ªô chi·∫øu</th>
                <th>Ch·ª©ng ch·ªâ</th>
                <th>S·ªë My Number</th>
                <th>Ghi ch√∫</th>
                <th>ƒê·ªãa ch·ªâ</th>
                <th>ƒêi·ªán tho·∫°i</th>
                <th>Email</th>
                <th>L∆∞∆°ng</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in employeeDtos)
            {
                <tr>
                    <td>@emp.Id</td>
                    <td>@emp.FirstName</td>
                    <td>@emp.LastName</td>
                    <td>@emp.KokuSeki</td>
                    <td>@emp.Passport</td>
                    <td>@emp.Shikaku</td>
                    <td>@emp.MyNumber</td>
                    <td>@emp.BiKou</td>
                    <td>@emp.JuuSho</td>
                    <td>@emp.Keitai</td>
                    <td>@emp.Mail</td>
                    <td>@emp.Salary</td>
                    @*<td>Created At: @emp.CreatedAt.ToString("yyyy/MM/dd HH:mm:ss")</td> *@
                    @*<td>Updated At: @emp.UpdatedAt.ToString("yyyy/MM/dd HH:mm:ss")</td> *@
                    <td>
                        <a href="/details/@emp.Id">üîç employee details</a> @* Á§æÂì°ÊÉÖÂ†±Ë©≥Á¥∞ *@
                        <a href="/update/@emp.Id">‚úèÔ∏è Edit</a> @* Á§æÂì°ÊÉÖÂ†±Êõ¥Êñ∞ *@
                        <button class="btn btn-danger btn-sm" @onclick="() => ConfirmDelete(emp.Id)">üóë Delete</button> @* Á§æÂì°ÊÉÖÂ†±ÂâäÈô§ *@
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (isShowingPopup)
{
    <div class="popup-message" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);background-color: #fff; padding: 20px; border: 1px solid #ccc;">
        <p><strong>Are you sure you want to delete this employee?</strong></p>
        <span>This action cannot be undone. This will permanently delete the employee record and remove the data from the server.</span>
        <br /><br />
        <button class="btn btn-danger" @onclick="DeleteEmployee">Delete</button>
        <button class="btn btn-secondary" @onclick="CancelDelete">Cancel</button>
    </div>
}

@code {
    private List<DtoEmployee> employeeDtos = new List<DtoEmployee>();
    private bool isShowingPopup = false;
    private int employeeIdToDelete;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // G·ªçi API t·ª´ nh√°nh backend ƒë·ªÉ l·∫•y danh s√°ch nh√¢n vi√™n
            employeeDtos = await Http.GetFromJsonAsync<List<DtoEmployee>>("api/employees/getAll") ?? new List<DtoEmployee>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error While calling Api: {ex.Message}");
        }
    }

    protected void ConfirmDelete(int id)
    {
        employeeIdToDelete = id;
        isShowingPopup = true;
    }
    
    private void DeleteEmployee()
    {
        NavigationManager.NavigateTo($"/delete/{employeeIdToDelete}");
        isShowingPopup = false;
    }
    private void CancelDelete()
    {
        isShowingPopup = false;
    }
}
