@page "/protected"
@inject HttpClient Http
@inject IJSRuntime JS

<h3>Trang Bảo Mật</h3>

@if (!string.IsNullOrEmpty(Message))
{
    <p>@Message</p>
}

<button @onclick="CallProtectedApi">Gọi API Bảo Mật</button>

@code {
    private string Message { get; set; } = "";

    private async Task CallProtectedApi()
    {
        // Lấy token từ localStorage
        var token = await JS.InvokeAsync<string>("localStorage.getItem", "jwtToken");

        if (string.IsNullOrEmpty(token))
        {
            Message = "Chưa có token. Vui lòng đăng nhập trước.";
            return;
        }

        // Gán token vào header Authorization của HttpClient
        Http.DefaultRequestHeaders.Authorization =
            new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);

        try
        {
            // Gọi API bảo mật. Thay URL này bằng URL thật của API bảo mật của bạn.
            var response = await Http.GetAsync("http://your-backend-url/api/protected");

            if (response.IsSuccessStatusCode)
            {
                var data = await response.Content.ReadAsStringAsync();
                Message = $"Dữ liệu API: {data}";
            }
            else
            {
                Message = "Không có quyền truy cập hoặc token không hợp lệ.";
            }
        }
        catch (Exception ex)
        {
            Message = $"Lỗi khi gọi API: {ex.Message}";
        }
    }
}
