@page "/add"
@using EmployeeManagement.Blazor.Models
@using EmployeeManagement.Blazor.Ui
@inject NavigationManager NavigationManager
@inject HttpClient Http

@code {

    [CascadingParameter]
    public Action<string> SetTitle { get; set; } = default!;
    protected override void OnInitialized()
        {
            // Cập nhật tiêu đề cho trang
            SetTitle?.Invoke("Add Employee");
        }
}

<h3>Adding new Employee</h3>
<p><em>Fill in the details below to add a new employee.</em></p>

<EditForm Model="newEmployee" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label>First Name:</label>
        <InputText class="form-control" @bind-Value="newEmployee.FirstName" />
    </div>
    <div class="mb-3">
        <label>Last Name:</label>
        <InputText class="form-control" @bind-Value="newEmployee.LastName" />
    </div>
    <div class="mb-3">
        <label>Country:</label>
        <InputText class="form-control" @bind-Value="newEmployee.KokuSeki" />
    </div>
    <div class="mb-3">
        <label>Passport:</label>
        <InputText class="form-control" @bind-Value="newEmployee.Passport" />
    </div>
    <div class="mb-3">
        <label>Qualification:</label>
        <InputText class="form-control" @bind-Value="newEmployee.Shikaku" />
    </div>
    <div class="mb-3">
        <label>My Number:</label>
        <InputText class="form-control" @bind-Value="newEmployee.MyNumber" />
    </div>
    <div class="mb-3">
        <label>Note:</label>
        <InputText class="form-control" @bind-Value="newEmployee.BiKou" />
    </div>
    <div class="mb-3">
        <label>Address:</label>
        <InputText class="form-control" @bind-Value="newEmployee.JuuSho" />
    </div>
    <div class="mb-3">
        <label>Phone:</label>
        <InputText class="form-control" @bind-Value="newEmployee.Keitai" />
    </div>
    <div class="mb-3">
        <label>Email:</label>
        <InputText class="form-control" @bind-Value="newEmployee.Mail" />
    </div>
    <div class="mb-3">
        <label>Salary:</label>
        <InputNumber  class="form-control" @bind-Value="newEmployee.Salary" />
    </div>

    <button type="submit" class="btn btn-primary">Add Employee</button>
    <button type="button" class="btn btn-secondary" @onclick="GoBack">Cancel</button>

    <ValidationSummary />
</EditForm>

<!-- Include component Alert, sử dụng @ref để gọi phương thức ShowAsync -->
<Alert @ref="alert" Title= "Add Employee" Message="Are you sure want to add this employee?" OnConfirm="ConfirmAdd" OnCancel="CancelAdd" />

@code {
    private DtoEmployee newEmployee = new();
    // Reference đến component Alert
    private Alert alert = default!;

    private async Task HandleSubmit()
    {
        // Hiện popup xác nhận
        await alert.ShowAsync();
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/employees");
    }

    private async Task ConfirmAdd()
    {
        // Xử lý thêm nhân viên ở đây
        try
        {
            var response = await Http.PostAsJsonAsync("api/employees/add", newEmployee);
            if (response.IsSuccessStatusCode)
            {
                newEmployee = new(); // Reset form nếu thành công
                NavigationManager.NavigateTo("/employees"); // Quay lại danh sách nhân viên
                Console.WriteLine("Employee added successfully!");
            }
            else
            {
                Console.WriteLine("Failed to add employee.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
    private void CancelAdd()
    {
        // Xử lý hủy thêm nhân viên ở đây
        Console.WriteLine("Người dùng đã hủy thao tác thêm nhân viên.");
    }
}

